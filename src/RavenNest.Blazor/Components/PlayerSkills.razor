@using RavenNest.BusinessLogic.Extended

<div class="player-skills">

  @if (!string.IsNullOrEmpty(trainingSkill))
  {
    <div class="training-skill">
      @if (Player.State != null && !string.IsNullOrEmpty(Player.State.Island))
      {
        <span>You're currently training <b>@trainingSkill</b> with this character at <b>@Player.State.Island</b>.</span>
      }
      else
      {
        <span>You're currently training <b>@trainingSkill</b> with this character.</span>
      }
    </div>
  }

  @foreach (var skill in Player.Skills.AsList())
  {
    var isActive = !string.IsNullOrEmpty(trainingSkill) && skill.Name.Equals(trainingSkill, StringComparison.OrdinalIgnoreCase);
    <div class="stats-row@(isActive ? " active" : "")" title="@(isActive?"You're currently training this skill." : "")">
      <div class="stats-label">@skill.Name</div>
      <div class="stats-progress" title="@ExpDisplay(skill.Experience)">
        <div class="stats-progress-value" style="@StyleWidth((int)(skill.Percent*120))"></div>
        <div class="stats-progress-percent">@Math.Round(skill.Percent * 100, 2)%</div>
      </div>

      @if (skill.Name == "Health")
      {
        <div class="stats-value"><span class="current-health" title="Current Health">@currentHealth</span> / <span class="max-health">@skill.Level</span></div>
      }
      else
      {
        <div class="stats-value">@skill.Level</div>
      }
    </div>
  }
</div>

@code {
  [Parameter]
  public WebsitePlayer Player { get; set; }

  [Parameter]
  public bool CanManage { get; set; }
  private string trainingSkill;
  private int currentHealth;

  protected override void OnParametersSet()
  {
    if (Player == null)
      return;

    if (Player.State != null)
    {
      trainingSkill = Player.State.TaskArgument ?? Player.State.Task;
      currentHealth = Player.State.Health;
    }
    else
    {
      currentHealth = Player.Skills.HealthLevel;
    }
  }

  private string ExpDisplay(decimal value)
  {
    return value + " exp";
  }

  private string StyleWidth(int value)
  {
    return $"width: {value}px";
  }
}
