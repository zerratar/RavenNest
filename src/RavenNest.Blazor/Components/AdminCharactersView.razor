<div class="characters">
    <h1>Character's Skills</h1>
    <table class="characters-table">
        <tr>
            <th class="blank"></th>
            @foreach (var character in @Characters)
            {
                <th class="character-header">
                    <div class="character-name-info">
                        <div class="character-display-name">
                            <span class="character-name">@character.Name</span>
                            <span class="character-index">
                                @(character.Identifier != null ? $"#{character.Identifier}" : "")
                            </span>
                        </div>
                        <div class="character-combat-level">
                            <span class="character-level">@CharacterService.GetCombatLevel(character)</span>
                        </div>
                    </div>
                    <div class="character-currently">
                        @if (character != null && character.Skills != null && character.SessionInfo != null)
                        {
                            <span>
                                @if (character.State != null && character.State.InOnsen)
                                {
                                    <span>Currently resting and have</span>
                                    <b>@GetRestedTime(character)</b>
                                    <span>of rested time</span>
                                }
                                else if (!string.IsNullOrEmpty(character.TrainingSkill))
                                {
                                    <span>Currently training&nbsp;</span>
                                    <b>@GetTrainingSkillName(character)</b>
                                    <span>&nbsp;</span>
                                }
                                else
                                {
                                    <span>Currently </span>
                                }
                                @if (character.State != null)
                                {
                                    if (character.State.InDungeon)
                                    {
                                        <span>in the dungeon </span>
                                    }
                                    else if (character.State.InArena)
                                    {
                                        <span>in the Arena </span>
                                    }
                                    else if (character.State.InRaid)
                                    {
                                        <span>in a Raid </span>
                                    }
                                    else if (!string.IsNullOrEmpty(character.State.DuelOpponent))
                                    {
                                        <span>in a duel with&nbsp;</span>
                                        <b>Player.State.DuelOpponent </b>
                                    }
                                    else if (!string.IsNullOrEmpty(character.State?.Island))
                                    {
                                        <span>at&nbsp;</span>
                                        <b>@character.State.Island </b>
                                    }
                                    else
                                    {
                                        <span>sailing </span>
                                    }
                                }
                                @if (!string.IsNullOrEmpty(character.SessionInfo.OwnerUserName))
                                {
                                    <span>&nbsp;on&nbsp;</span>
                                    <b>@character.SessionInfo.OwnerUserName</b>
                                    <span>'s stream.</span>
                                }
                            </span>
                            <div class="last-updated">@GetLastUpdateString(character.SessionInfo.SkillsUpdated)</div>
                        }
                    </div>
                    <div class="character-control">
                        @if (CanModify)
                        {
                            <button @onclick="()=> Unstuck(character)" class="btn-icon"><i class="fa-solid fa-person-falling-burst" title="Unstuck"></i></button>
                            @if (character.UserId != Session.UserId)
                            {
                                <button @onclick="()=> CloneSkillsAndStateToMain(character)" class="btn-icon"><i class="fa fa-arrow-to-bottom" title="Clone Stats to Main"></i></button>
                            }
                            <button @onclick="()=> ResetSkills(character)" class="btn-icon"><i class="fa-regular fa-repeat" title="Reset Character's Skills"></i></button>
                        }
                    </div>
                </th>
            }
        </tr>

        @foreach (var skillName in RavenNest.DataModels.Skills.SkillNames)
        {
            <tr class="character-skill-row">
                <th class="character-skill-header-cell">
                    <SkillDisplay SkillName=@skillName></SkillDisplay>
                </th>
                @foreach (var character in Characters)
                {
                    var dirSkills = character.Skills.AsDirectionary();
                    RavenNest.BusinessLogic.Extended.PlayerSkill skill;
                    dirSkills.TryGetValue(skillName, out skill);
                    @if (skill != null)
                    {
                        var isActive = IsTrainingSkill(skill, character.TrainingSkill);
                        <td character-row="@(character.Identifier != null ? $"#{character.Identifier}" : $"{character.Alias ?? "1"}" )" class="character-skill-cell @(isActive ? " active" : "")" title="@(isActive?"You're currently training this skill." : "")">
                            <div class="character-stats-row">
                                <div class="stats-progress" title="@ExpDisplay(skill.Experience)">
                                    <div class="stats-progress-value @(isActive ? " active" : "")" style="@StyleWidth((int)(skill.Percent*100))"></div>
                                    <div class="stats-progress-percent @(isActive ? " active" : "")">@Math.Round(skill.Percent * 100, 2)%</div>
                                </div>
                                @if (skill.Name == "Health")
                                {
                                    <div class="stats-value">
                                        <span class="current-health" title="Current Health">@GetCurrentHealth(character)</span> /
                                        <span class="max-health">@skill.Level</span>
                                    </div>
                                }
                                else
                                {
                                    <div class="stats-value"><span class="skill-level">@skill.Level</span></div>
                                }
                                @if (CanModify)
                                {
                                    <div class="modify-skill @(isActive ? " active" : "")">
                                        <button @onclick="()=> ShowModifySkill(character, skill)" class="btn-icon"><i class="fa fa-pen"></i></button>
                                    </div>
                                }
                                else if (isActive)
                                {
                                    <div class="modify-skill @(isActive ? " active" : "")">
                                        <i class="fa fa-gears"></i>
                                    </div>
                                }
                            </div>
                        </td>
                    }
                }
            </tr>
        }
    </table>
    @if (ModifySkillDialogVisible && ModifyingSkill != null)
    {
        <div class="skill-modify-modal">
            <div class="skill-modify-modal-header">
                <h2>@ModifyingSkill.Name</h2>
                <button class="close" @onclick="HideModifySkill">x</button>
            </div>

            <label for="skill-level" class="input-label">Set the new <b>Level</b></label>
            <input name="skill-level" type="number" class="input" value="@ModifyingSkill.Level" @onchange="OnLevelModified" />

            <label for="skill-experience" class="input-label">Set the new <b>Experience</b>%</label>
            <input name="skill-experience" type="number" class="input" value="@((int)(ModifyingSkill.Percent * 100))" @onchange="OnExperienceModified" />

            <div class="skill-modify-modal-controls">
                <button @onclick="ApplyModifySkill" class="btn btn-primary">Save</button>
                <button @onclick="HideModifySkill" class="btn btn-secondary">Cancel</button>
            </div>
        </div>
    }
</div>


