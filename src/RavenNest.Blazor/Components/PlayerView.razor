@using RavenNest.Models
@using RavenNest.BusinessLogic.Extended
@inject RavenNest.Blazor.Services.PlayerService PlayerService

<div class="character-details">
  <h1>
    <span>@SelectedPlayer.Name</span>
    <span class="character-index">
      @SelectedPlayer.CharacterIndex @(SelectedPlayer.Identifier != null ? $"({SelectedPlayer.Identifier})" : "")
    </span>
    <span class="character-level">
      @PlayerService.GetCombatLevel(SelectedPlayer)
    </span>
  </h1>
</div>

<div class="character-details-tabs">
  <button class="tab-link @SelectedClass(CharacterViewState.Skills)" @onclick="ShowSkills">Skills</button>
  <button class="tab-link @SelectedClass(CharacterViewState.Inventory)" @onclick="ShowInventory">Inventory</button>
  @if (CanManage)
  {
    <button class="tab-link @SelectedClass(CharacterViewState.Customization)" @onclick="ShowCustomization">Cutomize</button>
  }

  @if (SelectedPlayer.Clan != null)
  {
    <button class="tab-link @SelectedClass(CharacterViewState.Clan)" @onclick="ShowClan">Clan</button>
  }
</div>

@switch (viewState)
{
  case CharacterViewState.Inventory:
    <PlayerInventory Player="@SelectedPlayer" CanManage="CanManage"></PlayerInventory>
    break;
  case CharacterViewState.Skills:
    <PlayerSkills Player="@SelectedPlayer" CanManage="CanManage"></PlayerSkills>
    break;
  case CharacterViewState.Clan:
    <PlayerClan Player="@SelectedPlayer" CanManage="CanManage"></PlayerClan>
    break;
  case CharacterViewState.Customization:
    <PlayerCustomization Player="@SelectedPlayer" CanManage="CanManage"></PlayerCustomization>
    break;
}

@code {
  [Parameter]
  public RavenNest.BusinessLogic.Extended.WebsitePlayer SelectedPlayer { get; set; }

  [Parameter]
  public bool CanManage { get; set; }

  private CharacterViewState viewState;

  private string SelectedClass(CharacterViewState state)
  {
    return viewState == state ? "active" : "";
  }

  private void ShowInventory()
  {
    viewState = CharacterViewState.Inventory;
  }

  private void ShowSkills()
  {
    viewState = CharacterViewState.Skills;
  }

  private void ShowClan()
  {
    viewState = CharacterViewState.Clan;
  }

  private void ShowCustomization()
  {
    viewState = CharacterViewState.Customization;
  }

  private enum CharacterViewState
  {
    Skills,
    Inventory,
    Clan,
    Customization
  }
}
