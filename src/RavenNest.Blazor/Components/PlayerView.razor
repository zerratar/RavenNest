@using RavenNest.Models
@using RavenNest.BusinessLogic.Extended
@inject RavenNest.Blazor.Services.PlayerService PlayerService

<div class="character-details">
  <h1>@SelectedPlayer.Name</h1>
  <div class="character-index">
    @SelectedPlayer.CharacterIndex @(SelectedPlayer.Identifier != null ? $"({SelectedPlayer.Identifier})" : "")
  </div>
  <div class="character-level">
    @PlayerService.GetCombatLevel(SelectedPlayer)
  </div>
</div>

<button class="btn btn-primary @SelectedClass(CharacterViewState.Skills)" @onclick="ShowSkills">Skills</button>
<button class="btn btn-primary @SelectedClass(CharacterViewState.Inventory)" @onclick="ShowInventory">Inventory</button>
@if (SelectedPlayer.Clan != null)
{
  <button class="btn btn-primary @SelectedClass(CharacterViewState.Clan)" @onclick="ShowClan">Clan</button>
}

@switch (viewState)
{
  case CharacterViewState.Inventory:
    <PlayerInventory Player="@SelectedPlayer" CanManage="CanManage"></PlayerInventory>
    break;
  case CharacterViewState.Skills:
    <PlayerSkills Player="@SelectedPlayer" CanManage="CanManage"></PlayerSkills>
    break;
  case CharacterViewState.Clan:
    <PlayerClan Player="@SelectedPlayer" CanManage="CanManage"></PlayerClan>
    break;
}

@code {
  [Parameter]
  public RavenNest.BusinessLogic.Extended.WebsitePlayer SelectedPlayer { get; set; }

  [Parameter]
  public bool CanManage { get; set; }

  private CharacterViewState viewState;

  private string SelectedClass(CharacterViewState state)
  {
    return viewState == state ? "selected" : "";
  }

  private void ShowInventory()
  {
    viewState = CharacterViewState.Inventory;
  }

  private void ShowSkills()
  {
    viewState = CharacterViewState.Skills;
  }

  private void ShowClan()
  {
    viewState = CharacterViewState.Clan;
  }

  private enum CharacterViewState
  {
    Skills,
    Inventory,
    Clan
  }
}
