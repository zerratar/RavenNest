@layout DashboardLayout
@page "/clan"
@page "/clan/ranks"
@using RavenNest.Blazor.Components
@using RavenNest.Blazor.Services
@inject RavenNest.Blazor.Services.ClanService ClanService
@inject RavenNest.Blazor.Services.AuthService AuthService
@inject RavenNest.Blazor.Services.LogoService LogoService
@inject NavigationManager NavigationManager

<div class="clan-management-container">
    <h1 class="page-title">Clan</h1>

    @if (!session.Authenticated)
    {
        <div class="alert alert-warning text-center">
            You don't seem to be logged in.
        </div>
    }
    else
    {
        if (clan == null)
        {
            if (session.Tier == 0 && !session.Administrator && !session.Moderator)
            {
                <div class="alert alert-info text-center">
                    You cannot create a clan. You need to have at least the <a href="https://www.patreon.com/ravenfall" target="_blank">Mithril Tier on Patreon</a>.
                </div>
            }
            else
            {
                <div class="card clan-create-card">
                    <div class="card-header">
                        <h2>Create a Clan</h2>
                    </div>
                    <div class="card-body">
                        <p>You do not have a clan. You may create one if you like.</p>
                        <EditForm Model="@createClan" OnValidSubmit="@HandleCreateClan">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="form-group">
                                <InputText id="name" class="form-control" placeholder="Clan Name" @bind-Value="createClan.Name" />
                            </div>
                            <button type="submit" class="btn btn-primary mt-2">Submit</button>
                        </EditForm>
                        @if (!string.IsNullOrEmpty(clanError))
                        {
                            <div class="text-danger mt-2">@clanError</div>
                        }
                    </div>
                </div>
            }
        }
        else
        {
            <div class="card clan-card">
                <div class="card-header d-flex align-items-center justify-content-between">
                    <div class="d-flex align-items-center">
                        @if (!string.IsNullOrEmpty(clan.Logo))
                        {
                            <img src="@clan.Logo" class="clan-logo rounded" alt="Clan Logo" />
                        }
                        else
                        {
                            <img src="/api/twitch/logo/@session.TwitchUserId" class="clan-logo rounded" alt="Default Clan Logo" />
                        }
                        <div class="clan-info ms-3">
                            @if (!editingClanName)
                            {
                                <h2 class="mb-0 d-flex align-items-center">
                                    @clan.Name
                                    <a class="change-identifier ms-2" title="Edit Clan Name" @onclick="EditClanName">
                                        <i class="fas fa-pen"></i>
                                    </a>
                                </h2>
                                @if (!string.IsNullOrEmpty(changeNameSuccess))
                                {
                                    <small class="text-success d-block">@changeNameSuccess</small>
                                }
                            }
                            else
                            {
                                <div class="input-group">
                                    <input type="text" placeholder="Enter a new clan name" class="form-control" @bind-value="clan.Name" />
                                    <button class="btn btn-success" @onclick="UpdateAlias" title="Confirm">
                                        <i class="fas fa-check"></i>
                                    </button>
                                    <button class="btn btn-danger" @onclick="CancelEditAlias" title="Cancel">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                                @if (nameChangeCount < 2)
                                {
                                    <small class="change-left d-block mt-1">You have <b>@(2 - nameChangeCount)</b> free name changes left.</small>
                                }
                                @if (!string.IsNullOrEmpty(clanError))
                                {
                                    <small class="text-danger d-block">@clanError</small>
                                }
                            }
                            <p class="clan-level mb-0">Level <span>@clan.Level</span></p>
                        </div>
                    </div>
                    @if (!reloadingClanLogo)
                    {
                        <a class="refresh-logo btn btn-light" title="Refresh Logo" @onclick="ReloadClanLogo">
                            <i class="fas fa-sync"></i>
                        </a>
                    }
                </div>
                <div class="card-body">
                    <ul class="nav nav-tabs">
                        <li class="nav-item">
                            <a class="nav-link tab-link @( !showRanks ? "active" : "")" @onclick="ShowMembers">Members</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link tab-link @( showRanks ? "active" : "")" @onclick="ShowRanks">Ranks</a>
                        </li>
                    </ul>
                    <div class="tab-content mt-3">
                        @if (showRanks)
                        {
                            <div class="tab-pane active">
                                <ClanRoleList ClanId="@clan.Id" CanManage="@canManageMembers"></ClanRoleList>
                            </div>
                        }
                        else
                        {
                            <div class="tab-pane active">
                                <ClanMemberList ClanId="@clan.Id" CanManage="@canManageMembers"></ClanMemberList>
                            </div>
                        }
                    </div>
                </div>
            </div>

            @if (showGetMoreNameChanges)
            {
                <!-- Modal for name change limit info -->
                <div class="modal-backdrop fade show"></div>
                <div class="modal d-block" tabindex="-1">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Name Change Unavailable</h5>
                                <button type="button" class="btn-close" aria-label="Close" @onclick="CloseNameChangeInfo"></button>
                            </div>
                            <div class="modal-body">
                                <p>You have reached your clan name change limit. Please contact a Ravenfall Staff on Discord for further assistance.</p>
                            </div>
                            <div class="modal-footer">
                                <RavenButton OnClick="CloseNameChangeInfo">Close</RavenButton>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    }
</div>

@code {
    private const string ClanAlreadyExists = "A clan with the same name already exists.";
    private bool canChangeClanName;
    private RavenNest.Models.SessionInfo session;
    private RavenNest.Models.Clan clan;
    private string oldClanName;
    private int nameChangeCount;
    private bool reloadingClanLogo;
    private bool canManageMembers;
    private bool editingClanName;
    private bool showRanks;
    private bool showGetMoreNameChanges;
    private string clanError;
    private string changeNameSuccess;

    private CreateClanModel createClan = new CreateClanModel();

    private void CloseNameChangeInfo()
    {
        showGetMoreNameChanges = false;
        InvokeAsync(StateHasChanged);
    }

    private void EditClanName()
    {
        if (!canChangeClanName)
        {
            showGetMoreNameChanges = true;
            return;
        }

        oldClanName = clan.Name;
        editingClanName = true;
    }

    private void CancelEditAlias()
    {
        if (!canChangeClanName)
            return;

        clan.Name = oldClanName;
        editingClanName = false;
    }

    private async void ReloadClanLogo()
    {
        reloadingClanLogo = true;
        await InvokeAsync(StateHasChanged);

        if (this.clan != null)
        {
            await LogoService.UpdateClanLogoAsync(this.clan.OwnerUserId);
            reloadingClanLogo = false;
            await InvokeAsync(StateHasChanged);
        }
    }

    private void UpdateAlias()
    {
        if (!canChangeClanName)
            return;

        changeNameSuccess = "";
        clanError = "";

        if (string.IsNullOrEmpty(clan.Name))
        {
            clanError = "Clan name cannot be empty";
            return;
        }

        if (clan.Name.Length > 40)
        {
            clanError = "Clan name is too long. It cannot exceed 40 characters.";
            return;
        }

        if (ClanService.UpdateClanName(clan.Id, clan.Name))
        {
            editingClanName = false;
            changeNameSuccess = "Name updated. You may need to !leave !join ingame for it to take effect.";
            canChangeClanName = ClanService.CanChangeClanName(clan.Id);
            nameChangeCount = ClanService.GetNameChangeCount(clan.Id);
        }
        else
        {
            clanError = ClanAlreadyExists;
        }
        InvokeAsync(StateHasChanged);
    }

    private void ShowMembers()
    {
        showRanks = false;
    }
    private void ShowRanks()
    {
        showRanks = true;
    }

    protected override void OnInitialized()
    {
        showRanks = NavigationManager.Uri.ToString().IndexOf("ranks", StringComparison.OrdinalIgnoreCase) > 0;
        session = AuthService.GetSession();
        if (session == null || session.UserName == null)
        {
            return;
        }

        canChangeClanName = session.CanChangeClanName;
        clan = ClanService.GetClan();
        if (clan != null)
        {
            canManageMembers = clan.OwnerUserId == session.UserId;
            nameChangeCount = ClanService.GetNameChangeCount(clan.Id);
            oldClanName = clan.Name;
        }
    }

    private void HandleCreateClan()
    {
        clan = ClanService.CreateClan(createClan);
        if (clan == null)
        {
            clanError = ClanAlreadyExists;
            return;
        }
        canManageMembers = true;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (session == null || !session.Authenticated)
        {
            NavigationManager.NavigateTo("/login/redirect/" + NavigationManager.ToBaseRelativePath(NavigationManager.Uri));
        }
    }
}
