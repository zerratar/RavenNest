@layout DashboardLayout
@page "/clan"
@page "/clan/ranks"
@using RavenNest.Blazor.Components
@using RavenNest.Blazor.Services
@inject RavenNest.Blazor.Services.ClanService ClanService
@inject RavenNest.Blazor.Services.AuthService AuthService
@inject NavigationManager NavigationManager

@if (session.UserId == null)
{
  <p>You don't seem to be logged in.</p>
}
else
{
  if (clan == null)
  {
    if (session.Tier == 0 && !session.Administrator && !session.Moderator)
    {
      <p>You cannot create a clan. You need to have at least the <a href="https://www.patreon.com/ravenfall" target="_blank">Mithril Tier on patreon</a></p>
    }
    else
    {
      <div class="clan-create">
        <p>You do not have a clan. You may create one if you like.</p>
        <EditForm Model="@createClan" OnValidSubmit="@HandleCreateClan">
          <DataAnnotationsValidator />
          <ValidationSummary />
          <InputText id="name" @bind-Value="createClan.Name" />
          <button type="submit">Submit</button>
        </EditForm>
        <p class="clan-name-error">@clanError</p>
      </div>
    }
  }
  else
  {
    <div class="clan-header">
      @if (!string.IsNullOrEmpty(clan.Logo))
      {
        <img src="@clan.Logo" class="clan-logo" />
      }
      else
      {
        <img src="/api/twitch/logo/@session.UserId" class="clan-logo" />
      }
      <h1>@clan.Name</h1>
      @if (!editingClanName)
      {
        <a class="change-identifier" @onclick="EditClanName"><span class="fa fa-pen"></span></a>
        <p class="clan-name-success">@changeNameSuccess</p>
      }
      else
      {
        <input type="text" placeholder="Enter a new clan name" class="input edit-identifier" @bind-value="clan.Name" />
        <a @onclick="UpdateAlias"><i class="fas fa-check"></i></a>
        <a @onclick="CancelEditAlias"><i class="fas fa-times"></i></a>
        <p class="clan-name-error">@clanError</p>
      }
    </div>

    <div class="clan-view-tabs">
      <button class="tab-link @(!showRanks ? "active":"")" href="/clan" @onclick="ShowMembers">
        Members
      </button>
      <button class="tab-link @(showRanks ? "active":"")" href="/clan/ranks" @onclick="ShowRanks">
        Ranks
      </button>
    </div>
    <div class="clan-view">
      @if (showRanks)
      {
        <div class="clan-roles">
          <ClanRoleList ClanId="@clan.Id" CanManage="@canManageMembers"></ClanRoleList>
        </div>
      }
      else
      {
        <div class="clan-members">
          <ClanMemberList ClanId="@clan.Id" CanManage="@canManageMembers"></ClanMemberList>
        </div>
      }
    </div>
  }
}

@code {
  private const string ClanAlreadyExists = "A clan with the same name already exists.";

  private RavenNest.Sessions.SessionInfo session;
  private RavenNest.Models.Clan clan;
  private string oldClanName;
  private bool canManageMembers;
  private bool editingClanName;
  private bool showRanks;
  private string clanError;
  private string changeNameSuccess;

  private CreateClanModel createClan = new CreateClanModel();

  private void EditClanName()
  {
    oldClanName = clan.Name;
    editingClanName = true;
  }
  private void CancelEditAlias()
  {
    clan.Name = oldClanName;
    editingClanName = false;
  }

  private void UpdateAlias()
  {
    changeNameSuccess = "";
    clanError = "";
    if (ClanService.UpdateClanName(clan.Id, clan.Name))
    {
      editingClanName = false;
      changeNameSuccess = "The name is not updated automatically, you may need to !leave !join ingame for it to take effect.";
    }
    else
    {
      clanError = ClanAlreadyExists;
    }
    InvokeAsync(StateHasChanged);
  }

  private void ShowMembers()
  {
    showRanks = false;
  }
  private void ShowRanks()
  {
    showRanks = true;
  }

  protected override void OnInitialized()
  {
    showRanks = NavigationManager.Uri.ToString().IndexOf("ranks", StringComparison.OrdinalIgnoreCase) > 0;
    session = AuthService.GetSession();
    clan = ClanService.GetClan();
    if (clan != null)
    {
      canManageMembers = clan.Owner == session.UserId;
      oldClanName = clan.Name;
    }
  }

  private void HandleCreateClan()
  {
    clan = ClanService.CreateClan(createClan);
    if (clan == null)
    {
      clanError = ClanAlreadyExists;
      return;
    }
    canManageMembers = true;
  }

  protected override void OnAfterRender(bool firstRender)
  {
    if (session.UserId == null)
    {
      NavigationManager.NavigateTo("/login");
    }
  }
}
