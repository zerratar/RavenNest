@page "/marketplace"

@using RavenNest.BusinessLogic.Game
@using RavenNest.Blazor.Services.Models
@using Microsoft.AspNetCore.WebUtilities
@using RavenNest.Blazor.Services
@using ItemFilter = RavenNest.Models.ItemFilter
@inject MarketplaceService MarketplaceService
@inject UserService UserService;
@inject NavigationManager NavigationManager
@inject ItemService ItemService
@inject AuthService AuthService

<div class="top-section">
    <div class="hero-text">
        <h1>Marketplace</h1>
    </div>
</div>

<div class="white-section-break"></div>
<div class="page-content">
    <div class="section">
        @if (items == null)
        {
            <LoadIndicator></LoadIndicator>
        }
        else
        {

            @if (isAdmin)
            {
                <button class="btn btn-action" @onclick="CancelExpiredListings">Cancel all Expired listings</button>
            }

            <div class="stash item-filters">
                <button class="item-filter @(itemFilter == ItemFilter.All ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.All)">
                    <span class="item-filter-text">All</span>
                    <i class="fa-sharp fa-solid fa-rectangles-mixed"></i>
                </button>
                <button class="item-filter @(itemFilter == ItemFilter.Swords ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Swords)">
                    <span class="item-filter-text">Swords</span>
                    <i class="fa-sharp fa-solid fa-sword"></i>
                </button>
                <button class="item-filter @(itemFilter == ItemFilter.Axes ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Axes)">
                    <span class="item-filter-text">Axes</span>
                    <i class="fa-sharp fa-solid fa-axe"></i>
                </button>
                <button class="item-filter @(itemFilter == ItemFilter.Spears ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Spears)">
                    <span class="item-filter-text">Spears</span>
                    <i class="fa-solid fa-scythe"></i>
                </button>
                <button class="item-filter @(itemFilter == ItemFilter.Bows ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Bows)">
                    <span class="item-filter-text">Bows</span>
                    <i class="fa-sharp fa-solid fa-bow-arrow"></i>
                </button>

                <button class="item-filter @(itemFilter == ItemFilter.Staves ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Staves)">
                    <span class="item-filter-text">Staves</span>
                    <i class="fa-sharp fa-solid fa-staff"></i>
                </button>

                <button class="item-filter @(itemFilter == ItemFilter.Shields ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Shields)">
                    <span class="item-filter-text">Shields</span>
                    <i class="fa-sharp fa-solid fa-shield"></i>
                </button>

                <button class="item-filter @(itemFilter == ItemFilter.Armors ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Armors)">
                    <span class="item-filter-text">Armors</span>
                    <i class="fa-sharp fa-solid fa-helmet-battle"></i>
                </button>

                <button class="item-filter @(itemFilter == ItemFilter.Accessories ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Accessories)">
                    <span class="item-filter-text">Accessories</span>
                    <i class="fa-sharp fa-solid fa-gem"></i>
                </button>

                <button class="item-filter @(itemFilter == ItemFilter.Pets ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Pets)">
                    <span class="item-filter-text">Pets</span>
                    <i class="fa-sharp fa-solid fa-dog"></i>
                </button>


                <button class="item-filter @(itemFilter == ItemFilter.Scrolls ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Scrolls)">
                    <span class="item-filter-text">Scrolls</span>
                    <i class="fa-sharp fa-solid fa-scroll"></i>
                </button>

                <button class="item-filter @(itemFilter == ItemFilter.Woodcutting ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Woodcutting)">
                    <span class="item-filter-text">Woodcutting</span>
                    <i class="fa-solid fa-tree"></i>
                </button>

                <button class="item-filter @(itemFilter == ItemFilter.Mining ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Mining)">
                    <span class="item-filter-text">Mining</span>
                    <i class="fa-solid fa-pickaxe"></i>
                </button>

                <button class="item-filter @(itemFilter == ItemFilter.Fishing ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Fishing)">
                    <span class="item-filter-text">Fishing</span>
                    <i class="fa-sharp fa-solid fa-fishing-rod"></i>
                </button>

                <button class="item-filter @(itemFilter == ItemFilter.Farming ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Farming)">
                    <span class="item-filter-text">Farming</span>
                    <i class="fa-solid fa-wheat"></i>
                </button>

                <button class="item-filter @(itemFilter == ItemFilter.Gathering ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Gathering)">
                    <span class="item-filter-text">Gathering</span>
                    <i class="fa-solid fa-mushroom"></i>
                </button>

                <button class="item-filter @(itemFilter == ItemFilter.Crafting ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Crafting)">
                    <span class="item-filter-text">Crafting</span>
                    <i class="fa-sharp fa-solid fa-hammer"></i>
                </button>

                <button class="item-filter @(itemFilter == ItemFilter.Cooking ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Cooking)">
                    <span class="item-filter-text">Cooking</span>
                    <i class="fa-sharp fa-solid fa-user-chef"></i>
                </button>

                <button class="item-filter @(itemFilter == ItemFilter.Alchemy ? "active-filter" : "")" @onclick="() => SelectItemFilter(ItemFilter.Alchemy)">
                    <span class="item-filter-text">Alchemy</span>
                    <i class="fa-sharp fa-solid fa-flask-round-potion"></i>
                </button>
            </div>

            <table class="marketplace-list">
                <thead>
                    <tr>
                        <th></th>

                        @*                        <th @onclick="SortByCraftingLevel">Crafting Level <span>@GetIndicator("crafting")</span></th>
                    <th @onclick="SortByVendorPrice">Vendor Price <span>@GetIndicator("vendor")</span></th>*@
                        <th @onclick="SortByName">Name <span>@GetIndicator("name")</span></th>
                        @if (isAdmin)
                        {
                            <th @onclick="SortBySeller">Seller <span>@GetIndicator("seller")</span></th>
                        }
                        <th @onclick="SortByStats">Stats <span>@GetIndicator("stats")</span></th>
                        <th @onclick="SortByLevelReq">Level Req <span>@GetIndicator("lev-req")</span></th>
                        <th @onclick="SortByCategory">Category <span>@GetIndicator("category")</span></th>
                        <th @onclick="SortByType">Item Type <span>@GetIndicator("type")</span></th>
                        <th @onclick="SortByMaterial">Material Type <span>@GetIndicator("material")</span></th>
                        <th @onclick="SortByAvailableAmount">Available Amount <span>@GetIndicator("amount")</span></th>
                        <th @onclick="SortByAskingPrice">Asking Price <span>@GetIndicator("ask-price")</span></th>
                        @if (isAdmin)
                        {
                            <th @onclick="SortByExpiryDate">Expires <span>@GetIndicator("expires")</span></th>
                        }

                        @if (canCancelItems)
                        {
                            <th>Actions</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var entry in items)
                    {
                        var item = GetItem(entry.ItemId);
                        if (item == null)
                        {
                            continue;
                        }

                        <tr>
                            <td><img src="@(ItemService.GetItemImage(entry.ItemId))" style="width: 40px" /></td>
                            <td class='marketplace'>@item.Name</td>
                            @if (isAdmin)
                            {
                                <td>@GetUserName(entry.SellerUserId)</td>
                            }
                            <!-- <td class='marketplace'></td> -->
                            <td class='item'>
                                @if (item.WeaponAim > 0)
                                {
                                    <span class="item-stat" title="Weapon Aim - Increases your hit rate in melee"><i class="fas fa-crosshairs"></i>@item.WeaponAim</span>
                                }
                                @if (item.WeaponPower > 0)
                                {
                                    <span class="item-stat" title="Weapon Power - Increases your maximum damage in melee"><i class="fas fa-swords"></i>@item.WeaponPower</span>
                                }
                                @if (item.RangedAim > 0)
                                {
                                    <span class="item-stat" title="Ranged Aim - Increases your ranged hit rate"><i class="fas fa-crosshairs"></i>@item.RangedAim</span>
                                }
                                @if (item.RangedPower > 0)
                                {
                                    <span class="item-stat" title="Ranged Power - Increases your ranged maximum damage"><i class="fas fa-bow-arrow"></i>@item.RangedPower</span>
                                }
                                @if (item.MagicAim > 0)
                                {
                                    <span class="item-stat" title="Magic Aim - Increases your magic hit rate">
                                        <i class="fas fa-wand"></i>@item.MagicAim
                                    </span>
                                }
                                @if (item.MagicPower > 0)
                                {
                                    <span class="item-stat" title="Magic Power - Increases your magic maximum damage">
                                        <i class="fas fa-hand-holding-magic"></i>
                                        @item.MagicPower
                                    </span>
                                }
                                @if (item.ArmorPower > 0)
                                {
                                    <span class="item-stat" title="Armor Power - Decreases the hit rate of your attacker"><i class="fas fa-shield"></i>@item.ArmorPower</span>
                                }
                            </td>
                            <td class='item'>
                                @if (item.RequiredSlayerLevel > 0)
                                {
                                    <span class="item-stat" title="Required Slayer Level">
                                        <i class="fas fa-skull"></i>
                                        @item.RequiredSlayerLevel
                                    </span>
                                }
                                @if (item.RequiredAttackLevel > 0)
                                {
                                    <span class="item-stat" title="Required Attack Level">
                                        <i class="fas fa-swords"></i>
                                        @item.RequiredAttackLevel
                                    </span>
                                }
                                @if (item.RequiredDefenseLevel > 0)
                                {
                                    <span class="item-stat" title="Required Defense Level">
                                        <i class="fas fa-shield"></i>
                                        @item.RequiredDefenseLevel
                                    </span>
                                }
                                @if (item.RequiredMagicLevel > 0)
                                {
                                    <span class="item-stat" title="Required Magic or Healing Level">
                                        <i class="fas fa-hand-holding-magic"></i>
                                        @item.RequiredMagicLevel
                                    </span>
                                }
                                @if (item.RequiredRangedLevel > 0)
                                {
                                    <span class="item-stat" title="Required Ranged Level">
                                        <i class="fas fa-bow-arrow"></i>
                                        @item.RequiredRangedLevel
                                    </span>
                                }
                            </td>
                            <td class='marketplace'>@item.Category</td>
                            <td class='marketplace'>@ItemService.GetTypeName(item)</td>
                            <td class='marketplace'>@ItemService.GetMaterialName(item)</td>
                            <td class='marketplace'>@entry.Amount</td>
                            <td class='marketplace'><img class="ravenCoins" src="/favicon.ico" />@entry.PricePerItem</td>

                            @if (isAdmin)
                            {
                                <td class='marketplace'>
                                    <span>@entry.Expires</span>
                                    @if (entry.Expires < DateTime.UtcNow)
                                    {
                                        <span class="expired">&nbsp;Expired</span>
                                    }
                                </td>
                            }
                            @if (canCancelItems)
                            {
                                <td class='marketplace'>
                                    @if (isAdmin || CanCancelItem(entry))
                                    {
                                        <button class="link-button" @onclick="(()=> CancelListing(entry.Id))">Cancel</button>
                                    }
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>