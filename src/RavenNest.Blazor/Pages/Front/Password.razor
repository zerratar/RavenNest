@layout MainLayout
@page "/password"
@using RavenNest.Blazor.Services.Models
@inject RavenNest.Blazor.Services.AccountService AccountService
@inject RavenNest.Blazor.Services.AuthService AuthService
@inject NavigationManager NavigationManager

<div class="top-section">
  <div class="hero-text">
  </div>
</div>

<div class="white-section-break"></div>
<div class="page-content">
  <div class="section">
    @if (session == null)
    {
      <LoadIndicator></LoadIndicator>
    }
    else
    {
      <div class="password">

        @if (session.RequiresPasswordChange)
        {
          <h1>Set a password</h1>
          <p class="hero-text">
            To complete your account, please add a password. This password is required to stream Ravenfall<br />
            <span class="note">Note: The password is not required for playing Ravenfall in someone elses stream.</span>
          </p>
        }
        else
        {
          <h1>Change password</h1>
          <p class="hero-text">
            You can change your password if you previously have forgotten it or just want to use a new one.<br />
            <span class="note">Note: The password is not required for playing Ravenfall in someone elses stream.</span>
          </p>
        }

        <div class="registration-form">
          <div class="username hero-text">
            <span>Your login username is </span><b>@session.UserName</b>
          </div>
          <div>
            <EditForm Model="@createPassword" OnValidSubmit="@SignupAsync">
              <DataAnnotationsValidator />
              <div class="input-fields">
                <InputText class="raven-input" placeholder="Password (min 6 characters)" id="password" type="password" @bind-Value="createPassword.Password" />
              </div>
              <ValidationSummary />
              <RavenButton>Save</RavenButton>
            </EditForm>
          </div>
        </div>
      </div>
    }
  </div>
</div>

@code {
  private RavenNest.Sessions.SessionInfo session;
  private CreatePassword createPassword = new CreatePassword();

  protected override void OnInitialized()
  {
    session = AuthService.GetSession();
  }

  private async Task SignupAsync()
  {
    if (await AccountService.SetPasswordAsync(createPassword))
    {
      NavigationManager.NavigateTo("/characters"); // should be changed into /dashboard
    }
  }

  protected override void OnAfterRender(bool firstRender)
  {
    if (session.UserId == null)
    {
      NavigationManager.NavigateTo("/login");
    }
  }
}